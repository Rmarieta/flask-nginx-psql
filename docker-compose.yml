services:
  db:
    image: postgres:16.1
    container_name: db
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - db-volume:/var/lib/postgresql/datascalable
    healthcheck:
      # checking when the database is ready for the flask app to wait
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 20s
      retries: 5

  redis:
    image: redis:7.2.3
    container_name: redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  flask:
    build: ./flask
    container_name: flask
    env_file:
      - .env
    ports:
      - "5000:5000"
    depends_on:
      # waiting for the upstream containers to be ready
      redis:
        condition: service_healthy
      db:
        condition: service_healthy

    volumes:
      - ./flask:/app

  # nginx:
  #   image: nginx:latest
  #   container_name: nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/conf.d:/etc/nginx/conf.d
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #     - ./nginx/ssl-certs:/etc/nginx/ssl-certs
  #   depends_on:
  #     - flask

# to persist container volumes
volumes:
  db-volume:
